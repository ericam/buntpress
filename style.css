/*
Theme Name: buntpress
Theme URI: http://buntport.com
Author: OddBird
Author URI: http://oddbird.com/
Description: Custom theme for Buntport based on wd_s' version
of Automattic's _s
Version: 1.0.0
License: GNU General Public License v2 or later
License URI: http://www.gnu.org/licenses/gpl-2.0.html
Text Domain: buntpress
Tags: custom
*/
html {
  -ms-overflow-style: -ms-autohiding-scrollbar;
  -webkit-text-size-adjust: 100%;
      -ms-text-size-adjust: 100%;
          text-size-adjust: 100%;
}

main {
  display: block;
}

details {
  display: block;
}

pre {
  overflow: auto;
}

progress {
  display: inline-block;
}

summary {
  display: block;
}

template {
  display: none;
}

*,
::before,
::after {
  border-style: solid;
  border-width: 0;
  box-sizing: border-box;
}

* {
  font-size: inherit;
  line-height: inherit;
  margin: 0;
  padding: 0;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

audio :not([controls]) {
  display: none;
}

[aria-busy='true'] {
  cursor: progress;
}

[aria-controls] {
  cursor: pointer;
}

[aria-disabled] {
  cursor: default;
}

[hidden] {
  display: none;
}

button {
  overflow: visible;
}

input {
  border-radius: 0;
  line-height: normal;
}

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
     -moz-appearance: button;
          appearance: button;
  cursor: pointer;
}

button::-moz-focus-inner,
[type='button']::-moz-focus-inner,
[type='reset']::-moz-focus-inner,
[type='submit']::-moz-focus-inner {
  border: 0 none !important;
  padding: 0 !important;
}

[type='checkbox'],
[type='radio'] {
  box-sizing: border-box;
  padding: 0;
}

[type='number'] {
  width: auto;
}

[type='search'] {
  -webkit-appearance: textfield;
     -moz-appearance: textfield;
          appearance: textfield;
}

button,
input,
select,
textarea {
  background-color: transparent;
  color: inherit;
  font-family: inherit;
  font-style: inherit;
  font-weight: inherit;
}

textarea {
  overflow: auto;
  resize: vertical;
}

img {
  border: 0;
}

svg:not(:root) {
  overflow: hidden;
}

audio,
canvas,
iframe,
img,
svg,
video {
  max-width: 100%;
  vertical-align: middle;
}

a {
  background-color: transparent;
}

a:active, a:hover {
  outline: 0;
}

abbr[title] {
  border-bottom: 1px dotted;
}

b,
strong {
  font-weight: bold;
}

code,
kbd,
pre,
samp {
  font-family: monospace;
  font-size: inherit;
}

dfn {
  font-style: italic;
}

nav ol,
nav ul {
  list-style: none;
}

small {
  font-size: 0.75em;
}

sub,
sup {
  font-size: 0.75em;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

:root {
  background-color: #fff;
  color: #23090f;
  overflow-x: hidden;
  overflow-y: auto;
}

body {
  overflow-x: hidden;
  overflow-y: auto;
}

@font-face {
  font-family: "amatic";
  font-style: normal;
  font-weight: normal;
  src: url("assets/fonts/amaticsc-regular-webfont.woff") format("woff"), url("assets/fonts/amaticsc-regular-webfont.ttf") format("truetype");
}

@font-face {
  font-family: "amatic";
  font-style: normal;
  font-weight: bold;
  src: url("assets/fonts/amatic-bold-webfont.woff") format("woff"), url("assets/fonts/amatic-bold-webfont.ttf") format("truetype");
}

html {
  font-family: "azo-sans-web", "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 125%;
  font-size: calc(1em + 0.3vw);
  line-height: 1.5;
}

h1,
h2 {
  font-weight: normal;
}

h1 {
  font-size: calc(1rem + 2vw);
}

h2 {
  font-size: calc(1rem + 1vw);
}

h3 {
  font-size: calc(1rem + 0.5vw);
}

a:link, a:visited {
  color: #d83a5d;
  text-decoration: none;
}

a:focus, a:hover, a:active {
  color: #972941;
  text-decoration: underline;
}

p,
ul,
ol,
li,
blockquote {
  margin: 0.75rem 0;
}

ul,
ol,
blockquote {
  padding: 0 0.75rem;
}

img {
  max-width: 100%;
}

.site-messages {
  position: relative;
  text-align: center;
}

.site-messages:after {
  content: " ";
  bottom: auto;
  left: 0;
  position: absolute;
  right: 0;
  top: 100%;
  background-image: linear-gradient(to bottom right, #f9e1e7 49.9%, transparent 50%);
  height: 1.5rem;
}

.message:link, .message:visited {
  background-color: #f9e1e7;
  display: block;
  padding: 1.5rem;
}

.screen-reader-text {
  clip: rect(1px, 1px, 1px, 1px);
  -webkit-clip-path: inset(1px 1px 1px 1px);
          clip-path: inset(1px 1px 1px 1px);
  height: 1px;
  overflow: hidden;
  position: absolute;
  width: 1px;
}

[data-icon] {
  fill: currentColor;
  height: 1em;
  width: 1em;
}

[data-size='face'] {
  float: left;
  height: 6rem;
  margin-right: 0.5rem;
  width: 6rem;
}

input[type="text"],
input[type="email"],
input[type="url"],
input[type="password"],
input[type="search"],
input[type="number"],
input[type="tel"],
input[type="range"],
input[type="date"],
input[type="month"],
input[type="week"],
input[type="time"],
input[type="datetime"],
input[type="datetime-local"],
input[type="color"],
textarea {
  border: 1px solid;
  display: block;
  padding: 0.25rem 0.5rem;
  width: 100%;
}

textarea {
  min-height: 8rem;
}

button, button:link, button:visited,
.btn,
.btn:link,
.btn:visited,
.donate,
.donate:link,
.donate:visited,
.woocommerce #respond input#submit.alt,
.woocommerce #respond input#submit.alt:link,
.woocommerce #respond input#submit.alt:visited,
.woocommerce a.button.alt,
.woocommerce a.button.alt:link,
.woocommerce a.button.alt:visited,
.woocommerce button.button.alt,
.woocommerce button.button.alt:link,
.woocommerce button.button.alt:visited,
.woocommerce input.button.alt,
.woocommerce input.button.alt:link,
.woocommerce input.button.alt:visited {
  background-color: #d83a5d;
  color: #fff;
  border-radius: 0.3rem;
  display: inline-block;
  font: inherit;
  font-weight: inherit;
  padding: 0.375rem 1.5rem;
  text-decoration: none;
}

button:focus, button:hover, button:active,
.btn:focus,
.btn:hover,
.btn:active,
.donate:focus,
.donate:hover,
.donate:active,
.woocommerce #respond input#submit.alt:focus,
.woocommerce #respond input#submit.alt:hover,
.woocommerce #respond input#submit.alt:active,
.woocommerce a.button.alt:focus,
.woocommerce a.button.alt:hover,
.woocommerce a.button.alt:active,
.woocommerce button.button.alt:focus,
.woocommerce button.button.alt:hover,
.woocommerce button.button.alt:active,
.woocommerce input.button.alt:focus,
.woocommerce input.button.alt:hover,
.woocommerce input.button.alt:active {
  background-color: #972941;
}

.donate {
  font-size: 1.5rem;
  line-height: 2.25rem;
  display: block;
  margin: 1.5rem 0;
  padding: 1.5rem;
  width: 100%;
}

.tribe-events-page-title {
  text-align: left !important;
}

[data-feature]:after {
  clear: both;
  content: ' ';
  display: block;
}

[data-feature='main-stage'] {
  padding: 2rem 0;
}

[data-feature='main-stage']:first-child {
  padding-top: 0;
}

[data-feature='special-events'] {
  padding: 2rem 0;
}

[data-feature='third-tuesdays'],
[data-feature='all-ages'] {
  margin: 0 -1.5rem;
  padding: 2rem 1.5rem;
}

[data-feature='third-tuesdays'] {
  background-color: #fbf4ee;
  border: 2px dashed #f5ced7;
  border-width: 2px 0;
}

[data-feature='all-ages'] {
  background-color: #f5fbee;
  border-bottom: 2px dashed #f5ced7;
}

[data-feature-image] {
  background-position: center;
  background-size: cover;
  padding-top: 56.25%;
}

.ticket-link:link, .ticket-link:visited {
  background-color: #d83a5d;
  color: #fff;
  height: 6em;
  width: 6em;
  -ms-flex-align: center;
      -ms-grid-row-align: center;
      align-items: center;
  border: 1px solid;
  border-radius: 100%;
  float: right;
  font-weight: bold;
  margin: 0 1.5rem;
  position: relative;
}

[data-feature-image='large'] + .ticket-link:link, [data-feature-image='large'] + .ticket-link:visited {
  margin-top: -3em;
}

.ticket-link:focus, .ticket-link:hover, .ticket-link:active {
  background: #972941;
}

.ticket-link span {
  left: 50%;
  position: absolute;
  transform: translate3d(-50%, -50%, 0);
  top: 50%;
}

.show-dates {
  font-weight: bold;
}

[data-region] {
  margin: 0 auto;
  max-width: 50rem;
  padding: 0.75rem 1.5rem;
  width: 100%;
}

[data-region='main'] {
  padding-bottom: 1.5rem;
}

[data-region='banner'] {
  margin: 1.5rem auto 0;
  position: relative;
  z-index: 1;
}

.site-messages + [data-region='banner'] {
  margin-top: -1.5rem;
}

.brand {
  font-family: "amatic", "azo-sans-web", "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: calc(2.5rem + 2vw);
  line-height: 1;
  margin: 0;
  text-align: center;
  text-transform: uppercase;
}

.brand .buntport {
  font-weight: bold;
}

[rel='home']:link, [rel='home']:visited {
  color: #23090f;
}

[rel='home']:focus, [rel='home']:hover, [rel='home']:active {
  color: #d83a5d;
  text-decoration: none;
}

.nav {
  -ms-flex: 1 1 auto;
      flex: 1 1 auto;
}

.menu {
  margin: 1.5rem 0 0;
  padding: 0;
  text-align: center;
}

.menu-item {
  display: inline-block;
  margin: 0;
  padding: 2px 0.75rem;
}

.menu-item [href]:link, .menu-item [href]:visited {
  color: #23090f;
  border-bottom: 2px solid transparent;
}

.menu-item [href]:focus, .menu-item [href]:hover, .menu-item [href]:active {
  color: #d83a5d;
  text-decoration: none;
}

.current-menu-item [href]:link, .current-menu-item [href]:visited {
  color: inherit;
  border-bottom-color: inherit;
}

.footer {
  background-color: #41111c;
  color: #fff;
  clear: both;
  padding: 3rem 0;
}

.footer [href]:link, .footer [href]:visited {
  color: inherit;
  text-decoration: underline;
}

.footer .btn, .footer .btn:link, .footer .btn:visited {
  background-color: #fff;
  color: #972941;
}

[data-region='footer']:after {
  clear: both;
  content: ' ';
  display: block;
}

.copyright,
.email-signup {
  font-size: 0.75rem;
  line-height: 1.5rem;
  margin-bottom: 1.5rem;
}

.email-header {
  font-size: 1rem;
  line-height: 1.5rem;
  margin: 0;
}

.email-intro {
  margin: 0;
}

.form-actions {
  margin: 0.375rem 0;
  text-align: right;
}

@media (min-width: 37.5em) {
  .site-messages {
    font-size: 1.5rem;
    line-height: 2.25rem;
  }
  [data-feature-image]:not([data-feature-image='large']) {
    float: left;
    margin-right: 1.5rem;
    width: 20%;
    padding-top: 20%;
  }
  [data-feature-image]:not([data-feature-image='large']) ~ .show-summary {
    margin-left: 20%;
    padding-left: 1.5rem;
  }
  [data-region='banner'] {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-align: end;
    align-items: flex-end;
  }
  .brand {
    -ms-flex: 0 0 auto;
    flex: 0 0 auto;
    padding-right: 1.5rem;
  }
  .brand span {
    display: block;
  }
  .brand .theater {
    font-size: 1.24em;
  }
  .menu {
    text-align: right;
  }
  .copyright,
  .email-signup {
    float: left;
    width: 45%;
  }
  .email-signup {
    float: right;
  }
}

@media (max-width: 37.5em) {
  .ticket-link:link, .ticket-link:visited {
    margin-top: -3em;
  }
}

/*# sourceMappingURL=data:application/json;base64, */
